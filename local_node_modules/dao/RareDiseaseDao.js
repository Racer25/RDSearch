var ConnectionProvider = require("../dao/ConnectionProvider.js");
var mysql = require('mysql');

var addOrModifyRareDisease = function(rareDisease, i)
{
    var connection=ConnectionProvider.getConnection();

    var sql = "INSERT INTO rareDisease(orphanetID, name, description) "+
        "VALUES(?, ?, ?) ON DUPLICATE KEY "+ 
        "UPDATE name=?, description=?";
    var inserts = [rareDisease.orphanetID, rareDisease.name, rareDisease.description, rareDisease.name, rareDisease.description];
    sql = mysql.format(sql, inserts);

    connection.query(sql, function (error, results, fields) {
        if (error) throw error;
        console.log("Request "+i+" finished");
    });
}

var addOrModifyRareDiseases = function(rareDiseases)
{    
    for(var i = 0; i < rareDiseases.length; i++)
    {
        addOrModifyRareDisease(rareDiseases[i],  i);
    }
}

var getRareDisease = function(name, callback)
{    
    var connection=ConnectionProvider.getConnection();

    var sql = "SELECT * FROM rareDisease WHERE BINARY name=?";
    var inserts = [name];
    sql = mysql.format(sql, inserts);

    connection.query(sql, function (error, results, fields) {
        if (error) throw error;
        callback(results);
    });
}

var getRareDiseasesSuggestions = function(terms, callback)
{    
    if (terms.length !=0)
    {
        var connection=ConnectionProvider.getConnection();

        //Construction of the end of request
        var stringToConcat="";
        for(var i=0; i < terms.length; i++)
        {
            if(i==0)
            {
                stringToConcat+= " name LIKE ?";
            }
            else
            {
                stringToConcat+= " OR name LIKE ?";
            }
        }

        //Construction of inserts
        var inserts=[];
        for(var i=0; i < terms.length; i++)
        {
            inserts.push("%"+terms[i]+"%");
        }
        var sql = "SELECT * FROM rareDisease WHERE"+ stringToConcat;
        
        //Final construction of request
        sql = mysql.format(sql, inserts);

        //Lanch request
        connection.query(sql, function (error, results, fields) {
            if (error) throw error;
            callback(results);
        });
    }
    else
    {
        callback([]);
    }
}

exports.getRareDisease=getRareDisease;
exports.getRareDiseasesSuggestions=getRareDiseasesSuggestions;
exports.addOrModifyRareDisease=addOrModifyRareDisease;
exports.addOrModifyRareDiseases=addOrModifyRareDiseases;
//exports.modifyRareDisease=modifyRareDisease;
//exports.deleteRareDisease=deleteRareDisease;