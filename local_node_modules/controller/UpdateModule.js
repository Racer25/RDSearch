global.__base = __dirname + '/../../';

//Modules
var http = require('http');
var fs = require('fs');
var gracefulFs = require('graceful-fs');
gracefulFs.gracefulify(fs);
var CronJob = require('cron').CronJob;
var async = require("async");

//My modules
var NCBIAPIModule = require("../controller/NCBIAPIModule.js");
var TextMiningModule = require("./TextMiningModule.js");

var SymptomsProvider = require("../singleton/SymptomsProvider.js");

var RareDisease = require("../model/RareDisease.js");
var TextualInformation = require("../model/TextualInformation.js");
var RareDisease_MostCitedPublication = require("../model/RareDisease_MostCitedPublication.js");
var Symptom = require("../model/Symptom.js");
var RareDisease_Symptom = require("../model/RareDisease_Symptom.js");

var ConnectionProvider=require("../dao/ConnectionProvider.js");
var OtherDao = require("../dao/OtherDao.js");
var TextualInformationDao = require("../dao/TextualInformationDao.js");
var RareDiseaseDao = require("../dao/RareDiseaseDao.js");
var RareDisease_YearDao = require("../dao/RareDisease_YearDao.js");
var YearDao = require("../dao/YearDao.js");
var MostCitedPublicationDao = require("../dao/MostCitedPublicationDao.js");
var RareDisease_MostCitedPublicationDao = require("../dao/RareDisease_MostCitedPublicationDao.js");
var SymptomDao = require("../dao/SymptomDao.js");
var RareDisease_SymptomDao = require("../dao/RareDisease_SymptomDao.js");


//Create the job
var job = new CronJob(
    {
        cronTime: '00 33 13 * * 5-7',
        onTick: function()
        {
            //Runs every weekday (Monday through Friday)
            //at 16:24:00 AM. It does not run on Saturday
            //or Sunday.
            download("http://www.orphadata.org/data/export/en_product1.json",__base+"download/en_product1.json", updateDB);
        },
        start: true,
        timeZone: 'America/Montreal'
    }
);

//Launch the Job!
job.start();



var download = function(url, dest, callback)
{
    console.info("Download of file "+dest+" start...");
    var file = fs.createWriteStream(dest);
    var request = http.get(url, function(response) {
        response.pipe(file);
        file.on('finish', function() {
            console.info("Download finished");
            file.close(callback);  // close() is async, call cb after close completes.
        });
    }).on('error', function(err) {
        // Handle errors
        fs.unlink(dest); // Delete the file async. (But we don't check the result)
        if (callback) callback(err.message);
    });
};


var updateDB = function()
{
    //First, we check the update date of orphanet file
    checkLastUpdateDate(updateRareDiseaseWorkflow, noUpdateRareDiseaseWorkflow);
};

var checkLastUpdateDate =  function(callbackUpdate, callbackNoUpdate)
{
    var json = require(__base+"download/en_product1.json");
    var lastUpdateDateFromJSON=json.JDBOR[0].date.substring(0, 10);

    //Connection to DB
    ConnectionProvider.getConnection();
    ConnectionProvider.connect();

    OtherDao.checkLastUpdateDate(lastUpdateDateFromJSON,callbackUpdate,callbackNoUpdate);
};

var updateRareDiseaseWorkflow = function()
{
    var diseases=[];
    var textualinformations=[];
    getInformationFromJSON(diseases, textualinformations);

    console.info("Updating of rarediseaseTable start...");
    async.each(
        diseases,
        function(disease, next)
        {
            RareDiseaseDao.addOrModifyRareDisease(disease, next);
        },
        function(err)
        {
            if(err)
            {
                console.error("Error occured updating rarediseases Table");
            }
            else
            {
                console.info("Update of rarediseaseTable finished at "+(new Date()).toISOString());
                console.info("Updating of TextualInformation start...");
                async.each(
                    textualinformations,
                    function(textualinformation, next)
                    {
                        TextualInformationDao.addOrModifyTextualInformationFromOrphanet(textualinformation, next);
                    },
                    function(err)
                    {
                        if(err)
                        {
                            console.error("Error occured updating TextualInformation Table");
                            noUpdateRareDiseaseWorkflow();
                        }
                        else
                        {
                            console.info("Update of TextualInformation finished at "+(new Date()).toISOString());
                            noUpdateRareDiseaseWorkflow();
                        }
                    }
                );
            }
        }
    );
};

var noUpdateRareDiseaseWorkflow = function()
{
    //We get diseases from DB
    RareDiseaseDao.getRareDiseases(
        //Called when we received all diseases in results
        function(results)
        {
            console.info("Update of DB start...");

            //Bad
            results = results.filter(function(currentValue, index, arr)
            {
                return currentValue.orphanetID > "2494";
            });

            SymptomsProvider.getSymptoms(
                function(symptoms)
                {
                    async.eachLimit(
                        symptoms,
                        1,
                        function(symptomName, nextSymptom)
                        {
                            var symptom = Object.create(Symptom);
                            symptom.init(symptomName);
                            SymptomDao.addOrModifySymptom(symptom, nextSymptom);
                        },
                        function(err)
                        {
                            if(err)
                            {
                                console.error("Error updating table symptom");
                            }
                            else
                            {
                                SymptomDao.getSymptoms(
                                    function(symptoms)
                                    {
                                        async.eachLimit
                                        (
                                            results,
                                            1,
                                            function(rareDisease, next)
                                            {
                                                updateElementsLinkedToDisease(rareDisease, symptoms,  next);
                                            },
                                            function(err)
                                            {
                                                if(err)
                                                {
                                                    console.error("Error in Update :)");
                                                }
                                                else
                                                {
                                                    console.info("Update Finished :)");
                                                }
                                            }
                                        );
                                    }
                                );
                            }
                        }
                    );
                }
            );
        }
    );
};

var updateElementsLinkedToDisease = function(rareDisease, symptoms, callback)
{
    console.log("callNCBIAPI getIdsFromSearch, disease: "+rareDisease.orphanetID);

    NCBIAPIModule.callNCBIAPI(
        NCBIAPIModule.getIdsFromSearch,
        [
            "\""+rareDisease.name+"\"",
            rareDisease.orphanetID,
            //Called when esearch finished and ids acquired
            function(idlist, orphanetID)
            {
                if(idlist != undefined && orphanetID != undefined) {
                    fs.open("recup.csv", "a+", function (err, fd) {
                        if (err) {
                            return console.error(err);
                        }
                        else {
                            fs.write(fd, "\"" + rareDisease.name + "\";" + idlist.length + "\n", function (err) {
                                if (err) {
                                    return console.error(err);
                                }
                            });
                        }
                    });
                }
                else{
                    fs.open("error.csv", "a+", function (err, fd) {
                        if (err) {
                            return console.error(err);
                        }
                        else {
                            fs.write(fd, rareDisease.name + "\n", function (err) {
                                if (err) {
                                    return console.error(err);
                                }
                            });
                        }
                    });
                }

                if(idlist != undefined && orphanetID != undefined && idlist.length > 0)
                {
                    /*
                    idlist = idlist.filter(function(currentValue, index, arr){return index < 100});
                    idlist.length = 0;
                    idlist.push("28922846");
                    */
                    var symptomsDetectedWithWeight = [];
                    updateSymptoms(
                        idlist,
                        rareDisease.orphanetID,
                        symptoms,
                        symptomsDetectedWithWeight,
                        callback
                    );
                    /*
                    //First, we check the 3 most cited articles for this disease
                    var rareDisease_mostCitedPublications = [];
                    console.log("callNCBIAPI getNumberPublicationsThatCiteGivingPublications, disease: " + orphanetID);
                    NCBIAPIModule.callNCBIAPI(
                        NCBIAPIModule.getNumberPublicationsThatCiteGivingPublications,
                        [
                            idlist,
                            function (timesCitedList) {
                                if (timesCitedList != undefined) {
                                    console.info(timesCitedList.length + " TimesCited recovered for disease " + orphanetID +
                                        " and publications from " + idlist[0] + " to " + idlist[idlist.length - 1]);
                                    //if(timesCited == undefined){return;}
                                    for (let i = 0; i < timesCitedList.length; i++) {
                                        var pubWithTimesCited = Object.create(RareDisease_MostCitedPublication);
                                        pubWithTimesCited.init(idlist[i], orphanetID, timesCitedList[i]);
                                        //Dynamic Ordering publications with timesCited and Top 3 of mostCitedPublications
                                        rareDisease_mostCitedPublications = dynamicSortingArray(pubWithTimesCited, rareDisease_mostCitedPublications, 3);
                                    }

                                    console.log(rareDisease_mostCitedPublications);
                                    console.info("TimesCited recovered from NCBI Entrez for: " + rareDisease.orphanetID);
                                    async.each(
                                        rareDisease_mostCitedPublications,
                                        function (rareDisease_mostCitedPublication, next3) {
                                            NCBIAPIModule.callNCBIAPI(
                                                NCBIAPIModule.getPublication,
                                                [
                                                    rareDisease_mostCitedPublication.idPublication,
                                                    function (publication) {
                                                        if (publication != undefined) {
                                                            console.info("Recovering publication details for publication: " + publication.idPublication);
                                                            //if(publication == undefined){return;}
                                                            MostCitedPublicationDao.addPublication(publication,
                                                                function () {
                                                                    RareDisease_MostCitedPublicationDao.addRareDisease_MostCitedPublication(
                                                                        rareDisease_mostCitedPublication,
                                                                        function () {
                                                                            console.log("RareDisease_MostCitedPublication stocked in DB: disease "+rareDisease_mostCitedPublication.orphanetID+
                                                                                " and publication "+rareDisease_mostCitedPublication.idPublication);
                                                                            next3();
                                                                        }
                                                                    );
                                                                }
                                                            );
                                                        }
                                                    }
                                                ]
                                            );
                                        },
                                        function (err)
                                        {
                                            if (err)
                                            {
                                                console.error("Error occured updating timesCited");
                                            }
                                            else
                                            {
                                                console.info("Updating timesCited and mostCitedPublication finished for: " + rareDisease.orphanetID);
                                                callback();
                                            }
                                        }
                                    );
                                }
                            }
                        ]
                    );

                    //After, we check the numberOfPublication per year in Pubmed
                    NCBIAPIModule.callNCBIAPI(
                        NCBIAPIModule.getRareDisease_YearFromIds,
                        [
                            idlist,
                            orphanetID,
                            function (rareDisease_YearList) {
                                if (rareDisease_YearList != undefined)
                                {
                                    console.log("Number of Publication per year recovered for " + orphanetID);
                                    async.each
                                    (
                                        rareDisease_YearList,
                                        //Called for each rareDisease_Year
                                        function (rareDisease_Year, next2) {
                                            var year =
                                                {
                                                    year: rareDisease_Year.year,
                                                    numberOfPublications: 0
                                                };
                                            YearDao.addOrModifyYear(
                                                year,
                                                function ()
                                                {
                                                    RareDisease_YearDao.addOrModifyRareDisease_Year(rareDisease_Year, next2);
                                                }
                                            );
                                        }
                                        ,
                                        function (err) {
                                            if (err)
                                            {
                                                console.error("Error occured updating is_studied_during");
                                            }
                                            else
                                            {
                                                console.info("Update of numberOfPublications finished for " + orphanetID);
                                            }
                                        }
                                    );
                                }
                            }
                        ]
                    );*/
                }
                else
                {
                    console.log("No ids found for disease "+rareDisease.orphanetID +": "+rareDisease.name);
                    callback();
                }
            }
        ]
    );
};

var getInformationFromJSON = function(diseases, textualinformations)
{
    var json = require(__base+"download/en_product1.json");

    var disorderList = json.JDBOR[0].DisorderList[0].Disorder;

    for(var m =0; m<disorderList.length; m++)
    {
        var disorder=disorderList[m];

        var disease = Object.create(RareDisease);

        var orphanetID= disorder.OrphaNumber;
        var name= disorder.Name[0].label;
        var sourceName="Orphanet";
        var sourceLink=disorder.ExpertLink[0].link;

        for(var i = 0; i < disorder.TextualInformationList.length; i++)
        {
            if(disorder.TextualInformationList[i].count != "0")
            {
                for(var j = 0; j < disorder.TextualInformationList[i].TextualInformation.length; j++)
                {
                    for(var k = 0; k < disorder.TextualInformationList[i].TextualInformation[j].TextSectionList.length; k++)
                    {
                        if(disorder.TextualInformationList[i].TextualInformation[j].TextSectionList[k].count != "0")
                        {
                            var textSection=disorder.TextualInformationList[i].TextualInformation[j].TextSectionList[k].TextSection;
                            for(var l = 0; l < textSection.length; l++)
                            {
                                var textualInformation=Object.create(TextualInformation);
                                var title=textSection[l].TextSectionType[0].Name[0].label;
                                var content=textSection[l].Contents;
                                var id=textSection[l].id;

                                //Init object
                                textualInformation.init(id, title, content, orphanetID, sourceName, sourceLink);

                                textualinformations.push(textualInformation);
                            }
                        }

                    }
                }
            }

        }

        disease.init(orphanetID, name);
        diseases.push(disease);
    }
};

var updateSymptoms = function(idList, orphanetID, symptoms, symptomsDetectedWithWeight, callback)
{
    //////////////////////////////////////
    /////Version getPublications avec S///
    //////////////////////////////////////

    console.log("callNCBIAPI getPublications from "+idList.length+" ids");
    NCBIAPIModule.callNCBIAPI(
        NCBIAPIModule.getPublications,
        [
            idList,
            function(publications)
            {
                if(publications.length !== 0)
                {
                    TextMiningModule.giveSymptomsWithOccurrenceWithLingPipe(
                        publications,
                        function(symptomsDetectedWithWeight)
                        {
                            //console.log("symptomsDetectedWithWeight: ");
                            //console.log(symptomsDetectedWithWeight);
                            /////////////////////////////////////
                            //PREPROCESSING FROM SIZE TO WEIGHT//
                            /////////////////////////////////////
                            var symptomsWithOccurrenceBis =symptomsDetectedWithWeight.slice();

                            /*
                            //Exp to strenghten influence of big terms
                            for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                            {
                                symptomsWithOccurrenceBis[i].size=Math.exp(symptomsWithOccurrenceBis[i].size);
                                console.log(symptomsWithOccurrenceBis[i]);
                            }*/

                            //Find Min and Max for Normalization
                            var max = Math.max.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));
                            var min = Math.min.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));

                            //Normalization

                            //If size==1
                            if(max == min)
                            {
                                symptomsWithOccurrenceBis[0].size=15+(50-15)*symptomsWithOccurrenceBis[0].size;
                            }
                            else
                            {
                                for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                                {
                                    symptomsWithOccurrenceBis[i].size=15+(50-15)*(symptomsWithOccurrenceBis[i].size-min)/(max-min);
                                }
                            }

                            console.log("symptomsWithOccurrenceBis: ");
                            console.log(symptomsWithOccurrenceBis);

                            /////////////////
                            //DB operations//
                            /////////////////
                            async.eachLimit(
                                symptomsWithOccurrenceBis,
                                1,
                                function(symptomWithOccurrence, next)
                                {
                                    var symptom = Object.create(Symptom);
                                    symptom.init(symptomWithOccurrence.name);
                                    SymptomDao.addOrModifySymptom(
                                        symptom,
                                        function(insertId)
                                        {
                                            var rareDisease_Symptom = Object.create(RareDisease_Symptom);
                                            rareDisease_Symptom.init(orphanetID, symptomWithOccurrence.name, symptomWithOccurrence.size);
                                            RareDisease_SymptomDao.addOrModifyRareDisease_Symptom(
                                                rareDisease_Symptom,
                                                next
                                            );
                                        }
                                    )
                                },
                                function(err)
                                {
                                    if(err)
                                    {
                                        console.error("Error updating Symptoms of rareDisease: "+orphanetID);
                                    }
                                    else
                                    {
                                        console.info("Update of Symptoms of rareDisease: "+orphanetID+" finished");
                                        callback();
                                    }
                                }
                            );
                        }
                    );
                }
                else
                {
                    console.error("No publications retrieved from getPublications");
                    console.error("Moving to the next disease....");
                    callback();
                }
            }
        ]

    );
    //////////////////////////////////////
    /////Version getPublication sans S////
    //////////////////////////////////////
    /*
    var compteur = 0;
    var publications=[];
    async.eachLimit(
        idList,
        1,
        function(id, next2)
        {
            NCBIAPIModule.callNCBIAPI(
                NCBIAPIModule.getPublication,
                [
                    id,
                    function(publication)
                    {
                        publications.push(publication);
                        //console.log(publication);
                        next2();

                        TextMiningModule.giveSymptomsWithOccurrence(
                            symptoms,
                            publication.abstract,
                            function(symptomsWithOccurrence)
                            {
                                //Increment counter or Add to array
                                for(var i = 0; i< symptomsWithOccurrence.length; i++)
                                {
                                    var index= symptomsDetectedWithWeight.map(function(value, index, arr){return value.name}).indexOf(symptomsWithOccurrence[i].name);
                                    if(index !== -1 )
                                    {
                                        symptomsDetectedWithWeight[index].size += symptomsWithOccurrence[i].size ;
                                    }
                                    else
                                    {
                                        symptomsDetectedWithWeight.push(symptomsWithOccurrence[i]);
                                    }
                                }

                                compteur++;

                                console.log("////////////////////////////");
                                console.log("symptomsDetectedWithWeight ("+compteur+"/"+idList.length+" ids)");
                                console.log(symptomsDetectedWithWeight);
                                console.log("////////////////////////////");
                                next2();
                            }
                        );
                    }
                ]

            );


        },
        function(err)
        {
            if(err)
            {
                console.error("Error updating symptoms of disease "+orphanetID)
            }
            else
            {
                TextMiningModule.giveSymptomsWithOccurrenceWithLingPipe(
                    publications,
                    function(symptomsDetectedWithWeight)
                    {
                        console.log("symptomsDetectedWithWeight: ");
                        console.log(symptomsDetectedWithWeight);
                        /////////////////////////////////////
                        //PREPROCESSING FROM SIZE TO WEIGHT//
                        /////////////////////////////////////
                        var symptomsWithOccurrenceBis =symptomsDetectedWithWeight.slice();

                        //Exp to strenghten influence of big terms
                        for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                        {
                            symptomsWithOccurrenceBis[i].size=Math.exp(symptomsWithOccurrenceBis[i].size);
                            console.log(symptomsWithOccurrenceBis[i]);
                        }

                        //Find Min and Max for Normalization
                        var max = Math.max.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));
                        var min = Math.min.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));

                        //Normalization

                        //If size==1
                        if(max == min)
                        {
                            symptomsWithOccurrenceBis[0].size=15+(50-15)*symptomsWithOccurrenceBis[0].size;
                        }
                        else
                        {
                            for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                            {
                                symptomsWithOccurrenceBis[i].size=15+(50-15)*(symptomsWithOccurrenceBis[i].size-min)/(max-min);
                            }
                        }

                        console.log("symptomsWithOccurrenceBis: ");
                        console.log(symptomsWithOccurrenceBis);

                        /////////////////
                        //DB operations//
                        /////////////////
                        async.each(
                            symptomsWithOccurrenceBis,
                            function(symptomWithOccurrence, next)
                            {
                                var symptom = Object.create(Symptom);
                                symptom.init(0, symptomWithOccurrence.name);
                                SymptomDao.addOrModifySymptom(
                                    symptom,
                                    function(insertId)
                                    {
                                        var rareDisease_Symptom = Object.create(RareDisease_Symptom);
                                        rareDisease_Symptom.init(orphanetID, insertId, symptomWithOccurrence.size);
                                        RareDisease_SymptomDao.addOrModifyRareDisease_Symptom(
                                            rareDisease_Symptom,
                                            next
                                        );
                                    }
                                )
                            },
                            function(err)
                            {
                                if(err)
                                {
                                    console.error("Error updating Symptoms of rareDisease: "+orphanetID);
                                }
                                else
                                {
                                    console.info("Update of Symptoms of rareDisease: "+orphanetID+" finished");
                                    callback();
                                }
                            }
                        );
                    }
                );
                /*
                /////////////////////////////////////
                //PREPROCESSING FROM SIZE TO WEIGHT//
                /////////////////////////////////////
                var symptomsWithOccurrenceBis =symptomsDetectedWithWeight.slice();

                //Exp to strenghten influence of big terms
                for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                {
                    symptomsWithOccurrenceBis[i].size=Math.exp(symptomsWithOccurrenceBis[i].size);
                    console.log(symptomsWithOccurrenceBis[i]);
                }

                //Find Min and Max for Normalization
                var max = Math.max.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));
                var min = Math.min.apply(Math,symptomsWithOccurrenceBis.map(function(o){return o.size;}));

                //Normalization

                //If size==1
                if(max == min)
                {
                    symptomsWithOccurrenceBis[0].size=15+(50-15)*symptomsWithOccurrenceBis[0].size;
                }
                else
                {
                    for(var i = 0; i < symptomsWithOccurrenceBis.length; i++)
                    {
                        symptomsWithOccurrenceBis[i].size=15+(50-15)*(symptomsWithOccurrenceBis[i].size-min)/(max-min);
                    }
                }

                /////////////////
                //DB operations//
                /////////////////
                async.each(
                    symptomsWithOccurrenceBis,
                    function(symptomWithOccurrence, next)
                    {
                        var symptom = Object.create(Symptom);
                        symptom.init(0, symptomWithOccurrence.name);
                        SymptomDao.addOrModifySymptom(
                            symptom,
                            function(insertId)
                            {
                                var rareDisease_Symptom = Object.create(RareDisease_Symptom);
                                rareDisease_Symptom.init(orphanetID, insertId, symptomWithOccurrence.size);
                                RareDisease_SymptomDao.addOrModifyRareDisease_Symptom(
                                    rareDisease_Symptom,
                                    next
                                );
                            }
                        )
                    },
                    function(err)
                    {
                        if(err)
                        {
                            console.error("Error updating Symptoms of rareDisease: "+orphanetID);
                        }
                        else
                        {
                            console.info("Update of Symptoms of rareDisease: "+orphanetID+" finished");
                            callback();
                        }
                    }
                );
            }
        }
    );*/
};

var dynamicSortingArray = function(val, array, length)
{
    let index=0;
    for(let i = 0; i < array.length; i++)
    {
        if(array[i].timesCited > val.timesCited)
        {
            index++;
        }
    }
    array.splice(index, 0, val);
    if(array.length > length)
    {
        array.pop();
    }
    return array;
};

exports.updateDB=updateDB;
exports.updateRareDiseaseWorkflow=updateRareDiseaseWorkflow;
exports.noUpdateRareDiseaseWorkflow=noUpdateRareDiseaseWorkflow;
exports.checkLastUpdateDate=checkLastUpdateDate;
exports.updateSymptoms=updateSymptoms;
exports.getInformationFromJSON=getInformationFromJSON;
exports.download=download;
exports.dynamicSortingArray=dynamicSortingArray;