var fs = require('fs');
var gracefulFs = require('graceful-fs');
gracefulFs.gracefulify(fs);

var SymptomsProvider = function() {
    var symptoms = [];

    this.getSymptoms = function (callback) {
        if (symptoms.length === 0)
        {
            getSymptomsFromFile(
                function (symptomsFromFile)
                {
                    symptoms = symptomsFromFile;
                    callback(symptoms);
                }
            );
        }
        else
        {
            callback(symptoms);
        }
    };

    var getSymptomsFromFile = function (callback) {
        let dictionary = [];

        var lineReader = require('readline').createInterface(
            {
                input: fs.createReadStream(__base + 'download/hp.obo')
            }
        );

        lineReader.on('line', function (line) {
            if (line != "" && line != "\n") {
                var symptom = "";
                if (line.substring(0, 6) == "name: " && line != "name: All" && line != "name: All\n") {
                    symptom = line.substring(6).toLowerCase();
                }
                else if (line.length > 10 && line.substring(0, 10) == "synonym: \"") {
                    var index = 10;
                    var char = line.charAt(index);
                    do {
                        symptom += char;
                        index++;
                        char = line.charAt(index);
                    } while (char != "\"");//Char different from "
                }

                //Finally we add in dictionary
                if (symptom != "") {
                    dictionary.push(symptom.toLowerCase());
                }
            }

        });

        lineReader.on("close",
            function () {
                callback(dictionary);
            }
        );

    };
};

SymptomsProvider.instance = null;

SymptomsProvider.getInstance = function()
{
    if (this.instance === null) {
        this.instance = new SymptomsProvider();
    }
    return this.instance;
};

module.exports = SymptomsProvider.getInstance();